name: Build smartdns-ui and smartdns-webui IPK

on:
  push:
    tags:
      - 'v*'  # 通过标签触发构建
  repository_dispatch:
  workflow_dispatch:
    inputs:
      cache:
        description: 'Cache build dependencies'
        required: false
        default: 'true'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SDK_URL: https://downloads.immortalwrt.org/snapshots/targets/x86/64/immortalwrt-sdk-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'  # 确保子模块被拉取（如果需要）

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache SDK and Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ./immortalwrt-sdk
            ./node_modules
            ./target
          key: ${{ runner.os }}-sdk-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('package/smartdns/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-sdk-
        if: steps.cache-inputs.outputs.cache == 'true'

      - name: Download smartdns Makefile from pymumu's repo
        run: |
          # 克隆 pymumu 的 smartdns 仓库到临时目录
          git clone https://github.com/pymumu/openwrt-smartdns.git
          # 创建目标目录
          mkdir -p package/smartdns
          # 复制 Makefile 和源代码到本地 package/smartdns 目录
          cp -r openwrt-smartdns/* package/smartdns/
          # 清理临时仓库
          rm -rf openwrt-smartdns

      - name: Verify package directory exists
        run: |
          if [ ! -d "./package/smartdns" ]; then
            echo "Error: ./package/smartdns directory does not exist!"
            exit 1
          fi

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            libncurses5-dev \
            gawk \
            flex \
            bison \
            gettext \
            wget \
            zstd \
            git \
            npm
 
      - name: Download ImmortalWrt SDK
        run: |
          wget "$SDK_URL" -O immortalwrt-sdk.tar.zst
          tar -I zstd -xf immortalwrt-sdk.tar.zst
          SDK_DIR=$(ls -d immortalwrt-sdk-*/)
          mv "$SDK_DIR" immortalwrt-sdk

      

      - name: Update and Install Feeds
        working-directory: immortalwrt-sdk
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          

      - name: Copy smartdns package into SDK
        run: |
          rm -rf immortalwrt-sdk/feeds/packages/net/smartdns/
          # 复制整个 smartdns 包到 SDK 的 package 目录
          cp -r ./package/smartdns/. immortalwrt-sdk/feeds/packages/net/smartdns/
      
      - name: Setup SDK Configuration
        working-directory: immortalwrt-sdk
        run: |
          make defconfig
          # 启用 smartdns 及其依赖项（根据 Makefile 配置）
          echo 'CONFIG_PACKAGE_smartdns=y' >> .config
          echo 'CONFIG_PACKAGE_smartdns-ui=y' >> .config
          echo 'CONFIG_PACKAGE_smartdns-webui=y' >> .config  # 如果有 LuCI 插件

      - name: Build smartdns-ui Package
        working-directory: immortalwrt-sdk
        env:
          MAKEFLAGS: "-j$(nproc)"
        run: |
          make package/feeds/packages/smartdns/compile V=s
          make package/feeds/packages/smartdns/clean

      - name: Prepare Release Artifacts
        run: |
          mkdir -p release
          find immortalwrt-sdk/bin/packages/ -name "*.ipk" -exec cp {} release/ \;
          if [ ! -f release/*.ipk ]; then
            echo "::error::No IPK files found in release directory!"
            exit 1
          fi
          echo "Listing release artifacts:"
          ls -la release

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload IPK Files to Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/*.ipk
          asset_name: smartdns-ui-ipk
          asset_content_type: application/octet-stream

      - name: Cleanup
        run: |
          rm -rf immortalwrt-sdk.tar.zst immortalwrt-sdk
