name: Build smartdns-ui and smartdns-webui IPK

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      cache:
        description: 'Cache wrt build'
        required: false
        default: 'true'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SDK_URL: https://downloads.immortalwrt.org/snapshots/targets/x86/64/immortalwrt-sdk-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache SDK and Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ./immortalwrt-sdk
            ./node_modules
            ./target
          key: ${{ runner.os }}-sdk-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk flex bison gettext wget zstd

      - name: Download ImmortalWrt SDK
        run: |
          wget "$SDK_URL" -O immortalwrt-sdk.tar.zst
          tar -I zstd -xf immortalwrt-sdk.tar.zst
          SDK_DIR=$(ls -d immortalwrt-sdk-*/)
          mv "$SDK_DIR" immortalwrt-sdk

      - name: Copy smartdns package into SDK
        run: |
          mkdir -p immortalwrt-sdk/package/smartdns
          cp -r ./package/smartdns/* immortalwrt-sdk/package/smartdns/

      - name: Setup SDK config
        working-directory: immortalwrt-sdk
        run: |
          make defconfig

      - name: Build smartdns-ui package
        working-directory: immortalwrt-sdk
        run: |
          make package/smartdns-ui/compile V=s -j$(nproc)

      - name: Prepare release artifacts
        run: |
          mkdir -p release
          find immortalwrt-sdk/bin/packages/ -name "*.ipk" -exec cp {} release/ \;
          if [ ! -f release/*.ipk ]; then
            echo "::error::No IPK files found in release directory!"
            exit 1
          fi
          echo "Listing release artifacts:"
          ls -la release

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload IPK Files to Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/*.ipk
          asset_name: smartdns-ui-ipk
          asset_content_type: application/octet-stream
